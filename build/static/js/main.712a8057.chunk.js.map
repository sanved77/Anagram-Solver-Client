{"version":3,"sources":["comp/Panel/Panel.js","comp/Search/Search.js","api/getAnagrams.js","comp/PlaceHolder/PlaceHolder.js","comp/Main/Main.js","comp/App/App.js","index.js"],"names":["Panel","props","title","test","className","data","map","entry","i","key","length","Search","useState","term","setTerm","loading","setLoading","warning","setWarning","value","onKeyDown","e","keyCode","grabTheAnagrams","onChange","console","log","target","type","placeholder","maxLength","disabled","onClick","trimmedTerm","replace","fetch","method","headers","getAnagrams","then","response","json","wdata","setNewData","removePlaceHolder","catch","finally","PlaceHolder","App","searched","setSearched","setData","Object","keys","reverse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sTAoBeA,MAjBf,SAAeC,GACb,IAAMC,EAAQ,KAAKC,KAAKF,EAAMC,OAASD,EAAMC,MAAQ,gBAAkB,WACvE,OACE,yBAAKE,UAAU,SACb,uBAAGA,UAAU,eAAeF,GAE5B,yBAAKE,UAAU,SACZH,EAAMI,KAAKC,KAAI,SAACC,EAAOC,GAAR,OACd,0BAAMC,IAAKD,IAAKA,EAAI,KAAO,IAAMD,OAI1B,aAAVL,GAA8C,IAAtBD,EAAMI,KAAKK,QAAgB,yBAAKN,UAAU,SAAf,uB,uBC+C3CO,EA1DA,SAACV,GAAW,IAAD,EACAW,mBAAS,IADT,mBACjBC,EADiB,KACXC,EADW,OAEMF,mBAAS,IAFf,mBAEjBG,EAFiB,KAERC,EAFQ,OAGMJ,oBAAS,GAHf,mBAGjBK,EAHiB,KAGRC,EAHQ,KAsCxB,OACE,6BACE,yBAAKd,UAAU,UACb,yBAAKA,UAAU,cACb,2BAAOe,MAAON,EAAMO,UAhCX,SAACC,GACE,KAAdA,EAAEC,SACJ,EAAKC,mBA8BwCC,SArC5B,SAACH,GACpBI,QAAQC,IAAI,GAAKL,EAAEM,OAAOR,OAC1BL,EAAQO,EAAEM,OAAOR,QAmCsDf,UAAU,yBAAyBwB,KAAK,OAAOC,YAAY,eAAeC,UAAU,QAEvJ,yBAAK1B,UAAU,cACb,4BAAQ2B,UAAWlB,EAAMmB,QA7BT,WACtB,IAAIC,EAAcpB,EAAKqB,QAAQ,KAAM,IACjC,cAAc/B,KAAK8B,IACrBjB,EAAW,cACXE,GAAW,GCxBU,SAACL,GAG1B,OAAOsB,MAFO,IACF,sCAAwCtB,GAC1B,CACxBuB,OAAQ,MACRC,QAAS,CACP,eAAgB,gBDmBhBC,CAAYL,GACTM,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLzC,EAAM0C,WAAWD,GACjBzC,EAAM2C,mBAAkB,MAEzBC,OAAM,SAACxB,GACNI,QAAQC,IAAIL,MAEbyB,SAAQ,WACP9B,EAAW,QAGfE,GAAW,IAW4Cd,UAAWW,EAAU,4BACtE,0BAAMX,UAAU,kBACd,uBAAGA,UAAU,mBAEf,2CAILa,GAAW,yBAAKb,UAAU,WAAf,iCE1CH2C,G,MAZK,WAClB,OACE,yBAAK3C,UAAU,eACb,uBAAGA,UAAU,eAAb,YACA,uBAAGA,UAAU,YAAb,mCACA,uBAAGA,UAAU,QAAb,QACA,uBAAGA,UAAU,WAAb,yGACA,uBAAGA,UAAU,WAAb,4DC0BS4C,MA9Bf,WAAgB,IAAD,EACmBpC,oBAAS,GAD5B,mBACNqC,EADM,KACIC,EADJ,OAEWtC,mBAAS,IAFpB,mBAENP,EAFM,KAEA8C,EAFA,KAYb,OACE,yBAAK/C,UAAU,QACb,yBAAKA,UAAU,QACb,iDAEF,kBAAC,EAAD,CAAQwC,kBATZ,SAA2BK,GACzBC,EAAYD,IAQoCN,WAblD,SAAoBtC,GAClB8C,EAAQ9C,OAaJ4C,GAAY,kBAAC,EAAD,MACd,yBAAK7C,UAAU,UACZgD,OAAOC,KAAKhD,GACViD,UACAhD,KAAI,SAACG,EAAKD,GAAN,OACH,kBAAC,EAAD,CAAOC,IAAKD,EAAGN,MAAOO,EAAKJ,KAAMA,EAAKI,WCtBnCuC,MAJf,WACE,OAAO,kBAAC,EAAD,OCCTO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.712a8057.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Panel.scss\";\r\n\r\nfunction Panel(props) {\r\n  const title = /\\d/.test(props.title) ? props.title + \" letter words\" : \"Anagrams\";\r\n  return (\r\n    <div className=\"Panel\">\r\n      <p className=\"panel-title\">{title}</p>\r\n\r\n      <div className=\"words\">\r\n        {props.data.map((entry, i) => (\r\n          <span key={i}>{(i ? \", \" : \"\") + entry}</span>\r\n        ))}\r\n      </div>\r\n\r\n      {title === \"Anagrams\" && props.data.length === 0 && <div className=\"words\">No anagrams found</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Panel;\r\n","import React, { useState } from \"react\";\r\nimport \"./Search.scss\";\r\nimport { getAnagrams } from \"../../api/getAnagrams\";\r\n\r\nconst Search = (props) => {\r\n  const [term, setTerm] = useState(\"\");\r\n  const [loading, setLoading] = useState(\"\");\r\n  const [warning, setWarning] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    console.log(\"\" + e.target.value);\r\n    setTerm(e.target.value);\r\n  };\r\n\r\n  const keyPress = (e) => {\r\n    if (e.keyCode === 13) {\r\n      this.grabTheAnagrams();\r\n    }\r\n  };\r\n\r\n  const grabTheAnagrams = () => {\r\n    let trimmedTerm = term.replace(/\\s/, \"\");\r\n    if (/^[A-Za-z]+$/.test(trimmedTerm)) {\r\n      setLoading(\"is-loading\");\r\n      setWarning(false);\r\n      getAnagrams(trimmedTerm)\r\n        .then((response) => response.json())\r\n        .then((wdata) => {\r\n          props.setNewData(wdata);\r\n          props.removePlaceHolder(true);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        })\r\n        .finally(() => {\r\n          setLoading(\"\");\r\n        });\r\n    } else {\r\n      setWarning(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"search\">\r\n        <div className=\"search-box\">\r\n          <input value={term} onKeyDown={keyPress} onChange={handleChange} className=\"input is-info is-large\" type=\"text\" placeholder=\"enter a word\" maxLength=\"20\" />\r\n        </div>\r\n        <div className=\"search-btn\">\r\n          <button disabled={!term} onClick={grabTheAnagrams} className={loading + \" button is-info is-large\"}>\r\n            <span className=\"icon is-medium\">\r\n              <i className=\"fas fa-search\"></i>\r\n            </span>\r\n            <span>Search</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {warning && <div className=\"warning\">Please only enter alphabets</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","export const getAnagrams = (term) => {\r\n  const proxy = \"\";\r\n  const api = \"http://sanved.com/anagram-api?word=\" + term;\r\n  return fetch(proxy + api, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"text/plain\",\r\n    },\r\n  });\r\n};\r\n","import React from \"react\";\r\nimport \"./PlaceHolder.scss\";\r\n\r\nconst PlaceHolder = () => {\r\n  return (\r\n    <div className=\"placeholder\">\r\n      <p className=\"place-title\">Anagrams</p>\r\n      <p className=\"phonetic\">/ˈanəˌɡram/</p>\r\n      <p className=\"noun\">noun</p>\r\n      <p className=\"meaning\">“a word or phrase made by using the letters of another word or phrase in a different order”</p>\r\n      <p className=\"example\">“Angel” is an anagram of “glean.”</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlaceHolder;\r\n","import React, { useState } from \"react\";\r\nimport Panel from \"../Panel/Panel\";\r\nimport \"./Main.scss\";\r\nimport Search from \"../Search/Search\";\r\nimport PlaceHolder from \"../PlaceHolder/PlaceHolder\";\r\n\r\nfunction App() {\r\n  const [searched, setSearched] = useState(false);\r\n  const [data, setData] = useState({});\r\n\r\n  function setNewData(data) {\r\n    setData(data);\r\n  }\r\n\r\n  function removePlaceHolder(searched) {\r\n    setSearched(searched);\r\n  }\r\n\r\n  return (\r\n    <div className=\"Main\">\r\n      <div className=\"head\">\r\n        <span>Anagram Solver</span>\r\n      </div>\r\n      <Search removePlaceHolder={removePlaceHolder} setNewData={setNewData}></Search>\r\n      {!searched && <PlaceHolder></PlaceHolder>}\r\n      <div className=\"panels\">\r\n        {Object.keys(data)\r\n          .reverse()\r\n          .map((key, i) => (\r\n            <Panel key={i} title={key} data={data[key]}></Panel>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from \"react\";\r\nimport Main from \"../Main/Main\";\r\n\r\nfunction App() {\r\n  return <Main></Main>;\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./comp/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}